        TRANSLATED	ValueSet	Only one of rulesText, expression, or a compose definition SHALL be provided	extension('http://hl7.org/fhir/StructureDefinition/valueset-rules-text').exists() xor extension('http://hl7.org/fhir/StructureDefinition/valueset-expression').exists() xor compose.exists()	 SHEX_extension_SHEX ('http://hl7.org/fhir/StructureDefinition/valueset-rules-text') . SHEX_Xor_SHEX  SHEX_extension_SHEX ('http://hl7.org/fhir/StructureDefinition/valueset-expression') . SHEX_Xor_SHEX {fhir:compose .}
        TRANSLATED	ValueSet.expansion	For contains, a version SHALL be provided unless the parameters element has a "system-version" parameter corresponding to the system of the entry and the version matches the system-version parameter.	contains.version.exists() xor  parameter.where(name = 'system-version').exists()	{fhir:contains.version . SHEX_Xor_SHEX {fhir:parameter. SHEX_where_SHEX (name { fhir:v ['system-version'] } ) .}}
        TRANSLATED	Quantity	There SHALL be a code if there is a value and it SHALL be an expression of currency.  If system is present, it SHALL be ISO 4217 (system = "urn:iso:std:iso:4217" - currency).	(code.exists() or value.empty()) and (system.empty() or system = 'urn:iso:std:iso:4217')	({fhir:code . OR  NOT { fhir:value {fhir:v .} } }) AND ( NOT { fhir:system {fhir:v .} }  OR ({ fhir:system { fhir:v ['urn:iso:std:iso:4217'] }  }))
        TRANSLATED	CodeSystem	If a codesystem contains nested concepts, it must specify hierarchyMeaning	concept.concept.exists() implies hierarchyMeaning.exists()	{fhir:concept.concept . SHEX_Implies_SHEX {fhir:hierarchyMeaning .}}
        TRANSLATED	CodeSystem	If a codesystem contains example, fragment, or complete content, it must have at least one concept	content in ( 'example' | 'fragment' | 'complete' ) implies concept.exists()	{ fhir:content { fhir:v ['example' 'fragment' 'complete' SHEX_Implies_SHEX {fhir:concept .}] }  }
        TRANSLATED	Quantity	The comparator is not used on a SimpleQuantity	comparator.empty()	 NOT { fhir:comparator {fhir:v .} } 
        TRANSLATED	Observation	If there is no component or hasMember element then either a value[x] or a data absent reason must be present.	(component.empty() and hasMember.empty()) implies (dataAbsentReason.exists() or value.exists())	( NOT { fhir:component {fhir:v .} }  AND  NOT { fhir:hasMember {fhir:v .} } ) SHEX_Implies_SHEX ({fhir:dataAbsentReason . OR {fhir:value .}})
        TRANSLATED	Observation.component	If there is no a value a data absent reason must be present	value.exists() or dataAbsentReason.exists()	{fhir:value . OR {fhir:dataAbsentReason .}}
